[{"C:\\Users\\ikanb\\Desktop\\IT\\NODEJS\\QUESTION-ANSWER-API-PROJECT-EXPRESS-JS-MONGO-DB\\client\\src\\index.js":"1","C:\\Users\\ikanb\\Desktop\\IT\\NODEJS\\QUESTION-ANSWER-API-PROJECT-EXPRESS-JS-MONGO-DB\\client\\src\\App.js":"2","C:\\Users\\ikanb\\Desktop\\IT\\NODEJS\\QUESTION-ANSWER-API-PROJECT-EXPRESS-JS-MONGO-DB\\client\\src\\reportWebVitals.js":"3","C:\\Users\\ikanb\\Desktop\\IT\\NODEJS\\QUESTION-ANSWER-API-PROJECT-EXPRESS-JS-MONGO-DB\\client\\src\\pages\\Main.js":"4","C:\\Users\\ikanb\\Desktop\\IT\\NODEJS\\QUESTION-ANSWER-API-PROJECT-EXPRESS-JS-MONGO-DB\\client\\src\\pages\\Home.js":"5","C:\\Users\\ikanb\\Desktop\\IT\\NODEJS\\QUESTION-ANSWER-API-PROJECT-EXPRESS-JS-MONGO-DB\\client\\src\\pages\\Login.js":"6","C:\\Users\\ikanb\\Desktop\\IT\\NODEJS\\QUESTION-ANSWER-API-PROJECT-EXPRESS-JS-MONGO-DB\\client\\src\\pages\\SignUp.js":"7","C:\\Users\\ikanb\\Desktop\\IT\\NODEJS\\QUESTION-ANSWER-API-PROJECT-EXPRESS-JS-MONGO-DB\\client\\src\\components\\Navbar\\Navbar.js":"8","C:\\Users\\ikanb\\Desktop\\IT\\NODEJS\\QUESTION-ANSWER-API-PROJECT-EXPRESS-JS-MONGO-DB\\client\\src\\components\\Footer\\Footer.js":"9","C:\\Users\\ikanb\\Desktop\\IT\\NODEJS\\QUESTION-ANSWER-API-PROJECT-EXPRESS-JS-MONGO-DB\\client\\src\\components\\Navbar\\NavbarStyles.js":"10","C:\\Users\\ikanb\\Desktop\\IT\\NODEJS\\QUESTION-ANSWER-API-PROJECT-EXPRESS-JS-MONGO-DB\\client\\src\\utils\\API.js":"11","C:\\Users\\ikanb\\Desktop\\IT\\NODEJS\\QUESTION-ANSWER-API-PROJECT-EXPRESS-JS-MONGO-DB\\client\\src\\redux\\actions\\actionTypes.js":"12","C:\\Users\\ikanb\\Desktop\\IT\\NODEJS\\QUESTION-ANSWER-API-PROJECT-EXPRESS-JS-MONGO-DB\\client\\src\\redux\\actions\\authActions.js":"13","C:\\Users\\ikanb\\Desktop\\IT\\NODEJS\\QUESTION-ANSWER-API-PROJECT-EXPRESS-JS-MONGO-DB\\client\\src\\redux\\store\\store.js":"14","C:\\Users\\ikanb\\Desktop\\IT\\NODEJS\\QUESTION-ANSWER-API-PROJECT-EXPRESS-JS-MONGO-DB\\client\\src\\redux\\reducers\\authReducer.js":"15","C:\\Users\\ikanb\\Desktop\\IT\\NODEJS\\QUESTION-ANSWER-API-PROJECT-EXPRESS-JS-MONGO-DB\\client\\src\\pages\\LoginStyle.js":"16","C:\\Users\\ikanb\\Desktop\\IT\\NODEJS\\QUESTION-ANSWER-API-PROJECT-EXPRESS-JS-MONGO-DB\\client\\src\\pages\\index.js":"17","C:\\Users\\ikanb\\Desktop\\IT\\NODEJS\\QUESTION-ANSWER-API-PROJECT-EXPRESS-JS-MONGO-DB\\client\\src\\pages\\CreateQuestion.js":"18","C:\\Users\\ikanb\\Desktop\\IT\\NODEJS\\QUESTION-ANSWER-API-PROJECT-EXPRESS-JS-MONGO-DB\\client\\src\\redux\\reducers\\questionReducer.js":"19","C:\\Users\\ikanb\\Desktop\\IT\\NODEJS\\QUESTION-ANSWER-API-PROJECT-EXPRESS-JS-MONGO-DB\\client\\src\\redux\\actions\\questionActions.js":"20","C:\\Users\\ikanb\\Desktop\\IT\\NODEJS\\QUESTION-ANSWER-API-PROJECT-EXPRESS-JS-MONGO-DB\\client\\src\\pages\\Questions.js":"21","C:\\Users\\ikanb\\Desktop\\IT\\NODEJS\\QUESTION-ANSWER-API-PROJECT-EXPRESS-JS-MONGO-DB\\client\\src\\pages\\MyStack.js":"22","C:\\Users\\ikanb\\Desktop\\IT\\NODEJS\\QUESTION-ANSWER-API-PROJECT-EXPRESS-JS-MONGO-DB\\client\\src\\components\\QuestionItem\\QuestionItem.js":"23","C:\\Users\\ikanb\\Desktop\\IT\\NODEJS\\QUESTION-ANSWER-API-PROJECT-EXPRESS-JS-MONGO-DB\\client\\src\\pages\\QuestionDetail.js":"24","C:\\Users\\ikanb\\Desktop\\IT\\NODEJS\\QUESTION-ANSWER-API-PROJECT-EXPRESS-JS-MONGO-DB\\client\\src\\redux\\actions\\answerActions.js":"25","C:\\Users\\ikanb\\Desktop\\IT\\NODEJS\\QUESTION-ANSWER-API-PROJECT-EXPRESS-JS-MONGO-DB\\client\\src\\redux\\reducers\\answerReducer.js":"26","C:\\Users\\ikanb\\Desktop\\IT\\NODEJS\\QUESTION-ANSWER-API-PROJECT-EXPRESS-JS-MONGO-DB\\client\\src\\components\\Breadcrum\\Breadcrum.js":"27","C:\\Users\\ikanb\\Desktop\\IT\\NODEJS\\QUESTION-ANSWER-API-PROJECT-EXPRESS-JS-MONGO-DB\\client\\src\\components\\Breadcrum\\BreadcrumQuestions.js":"28","C:\\Users\\ikanb\\Desktop\\IT\\NODEJS\\QUESTION-ANSWER-API-PROJECT-EXPRESS-JS-MONGO-DB\\client\\src\\components\\Breadcrum\\BreadcrumQuestionDetail.js":"29","C:\\Users\\ikanb\\Desktop\\IT\\NODEJS\\QUESTION-ANSWER-API-PROJECT-EXPRESS-JS-MONGO-DB\\client\\src\\components\\Breadcrum\\BreadcrumAsk.js":"30","C:\\Users\\ikanb\\Desktop\\IT\\NODEJS\\QUESTION-ANSWER-API-PROJECT-EXPRESS-JS-MONGO-DB\\client\\src\\components\\QuestionDetailItem\\QuestionDetailItem.js":"31","C:\\Users\\ikanb\\Desktop\\IT\\NODEJS\\QUESTION-ANSWER-API-PROJECT-EXPRESS-JS-MONGO-DB\\client\\src\\components\\AnswerItem\\AnswerItem.js":"32","C:\\Users\\ikanb\\Desktop\\IT\\NODEJS\\QUESTION-ANSWER-API-PROJECT-EXPRESS-JS-MONGO-DB\\client\\src\\utils\\questionlike.js":"33","C:\\Users\\ikanb\\Desktop\\IT\\NODEJS\\QUESTION-ANSWER-API-PROJECT-EXPRESS-JS-MONGO-DB\\client\\src\\utils\\getSingleQuestion.js":"34","C:\\Users\\ikanb\\Desktop\\IT\\NODEJS\\QUESTION-ANSWER-API-PROJECT-EXPRESS-JS-MONGO-DB\\client\\src\\utils\\answerLike.js":"35","C:\\Users\\ikanb\\Desktop\\IT\\NODEJS\\QUESTION-ANSWER-API-PROJECT-EXPRESS-JS-MONGO-DB\\client\\src\\utils\\getSingleAnswer.js":"36","C:\\Users\\ikanb\\Desktop\\IT\\NODEJS\\QUESTION-ANSWER-API-PROJECT-EXPRESS-JS-MONGO-DB\\client\\src\\utils\\deleteQuestion.js":"37"},{"size":699,"mtime":1610640133316,"results":"38","hashOfConfig":"39"},{"size":239,"mtime":1611907775702,"results":"40","hashOfConfig":"39"},{"size":375,"mtime":1610091083625,"results":"41","hashOfConfig":"39"},{"size":1267,"mtime":1611914563917,"results":"42","hashOfConfig":"39"},{"size":3808,"mtime":1611914416050,"results":"43","hashOfConfig":"39"},{"size":4050,"mtime":1611914507880,"results":"44","hashOfConfig":"39"},{"size":4165,"mtime":1611914773748,"results":"45","hashOfConfig":"39"},{"size":10299,"mtime":1611913869435,"results":"46","hashOfConfig":"39"},{"size":7257,"mtime":1611907263647,"results":"47","hashOfConfig":"39"},{"size":4100,"mtime":1611345654231,"results":"48","hashOfConfig":"39"},{"size":222,"mtime":1610621143736,"results":"49","hashOfConfig":"39"},{"size":605,"mtime":1611177786896,"results":"50","hashOfConfig":"39"},{"size":1952,"mtime":1611736522469,"results":"51","hashOfConfig":"39"},{"size":489,"mtime":1611179033848,"results":"52","hashOfConfig":"39"},{"size":988,"mtime":1611734262478,"results":"53","hashOfConfig":"39"},{"size":1008,"mtime":1610644673388,"results":"54","hashOfConfig":"39"},{"size":200,"mtime":1611175450847,"results":"55","hashOfConfig":"39"},{"size":4084,"mtime":1611914854122,"results":"56","hashOfConfig":"39"},{"size":1006,"mtime":1610903344779,"results":"57","hashOfConfig":"39"},{"size":1335,"mtime":1611788747070,"results":"58","hashOfConfig":"39"},{"size":2201,"mtime":1611946562475,"results":"59","hashOfConfig":"39"},{"size":173,"mtime":1611914579180,"results":"60","hashOfConfig":"39"},{"size":5615,"mtime":1611947416892,"results":"61","hashOfConfig":"39"},{"size":6175,"mtime":1611954572312,"results":"62","hashOfConfig":"39"},{"size":659,"mtime":1611178863826,"results":"63","hashOfConfig":"39"},{"size":571,"mtime":1611178494620,"results":"64","hashOfConfig":"39"},{"size":1543,"mtime":1611908259692,"results":"65","hashOfConfig":"39"},{"size":1696,"mtime":1611913838339,"results":"66","hashOfConfig":"39"},{"size":1802,"mtime":1611913823886,"results":"67","hashOfConfig":"39"},{"size":1564,"mtime":1611913803239,"results":"68","hashOfConfig":"39"},{"size":3098,"mtime":1611914268387,"results":"69","hashOfConfig":"39"},{"size":3815,"mtime":1611954785194,"results":"70","hashOfConfig":"39"},{"size":537,"mtime":1611923823746,"results":"71","hashOfConfig":"39"},{"size":265,"mtime":1611916441541,"results":"72","hashOfConfig":"39"},{"size":595,"mtime":1611779433930,"results":"73","hashOfConfig":"39"},{"size":333,"mtime":1611780575344,"results":"74","hashOfConfig":"39"},{"size":311,"mtime":1611864341568,"results":"75","hashOfConfig":"39"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},"5g4a84",{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"78"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"78"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"78"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"78"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"78"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"78"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},"C:\\Users\\ikanb\\Desktop\\IT\\NODEJS\\QUESTION-ANSWER-API-PROJECT-EXPRESS-JS-MONGO-DB\\client\\src\\index.js",[],["159","160"],"C:\\Users\\ikanb\\Desktop\\IT\\NODEJS\\QUESTION-ANSWER-API-PROJECT-EXPRESS-JS-MONGO-DB\\client\\src\\App.js",[],"C:\\Users\\ikanb\\Desktop\\IT\\NODEJS\\QUESTION-ANSWER-API-PROJECT-EXPRESS-JS-MONGO-DB\\client\\src\\reportWebVitals.js",[],"C:\\Users\\ikanb\\Desktop\\IT\\NODEJS\\QUESTION-ANSWER-API-PROJECT-EXPRESS-JS-MONGO-DB\\client\\src\\pages\\Main.js",["161"],"\r\nimport Navbar from '../components/Navbar/Navbar';\r\nimport Footer from \"../components/Footer/Footer\"\r\nimport { Route, Switch } from 'react-router-dom';\r\n\r\nimport { useEffect } from 'react';\r\n\r\nimport {loginCheck} from \"../redux/actions/authActions\"\r\nimport {getAllQuestions} from \"../redux/actions/questionActions\"\r\nimport {useDispatch} from \"react-redux\"\r\nimport { CreateQuestion,Login,Signup,Home,Questions,QuestionDetail } from './';\r\n\r\n\r\n\r\n\r\nexport const Main = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(()=>{\r\n        dispatch(loginCheck())\r\n        dispatch(getAllQuestions())\r\n    },[])\r\n \r\n    return (\r\n\r\n        <div className=\"App\">\r\n            <Navbar />\r\n                    <Switch>\r\n                        <Route path=\"/login\" component={Login} />\r\n                        <Route path=\"/signup\" component={Signup} />\r\n                        <Route exact path=\"/\" component={Home} />\r\n                        <Route path=\"/newquestion\" component={CreateQuestion} />\r\n                        <Route exact path=\"/questions\" component={Questions} />\r\n                        <Route exact path=\"/questions/:id\" component={QuestionDetail} />\r\n                    </Switch>\r\n\r\n            <Footer />\r\n\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\n\r\n","C:\\Users\\ikanb\\Desktop\\IT\\NODEJS\\QUESTION-ANSWER-API-PROJECT-EXPRESS-JS-MONGO-DB\\client\\src\\pages\\Home.js",[],"C:\\Users\\ikanb\\Desktop\\IT\\NODEJS\\QUESTION-ANSWER-API-PROJECT-EXPRESS-JS-MONGO-DB\\client\\src\\pages\\Login.js",["162"],"import React, {useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n\r\n  TextField,\r\n  Grid,\r\n  Container,\r\n  Avatar,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\n\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\n\r\nimport API from \"../utils/API\"\r\nimport {login} from \"../redux/actions/authActions\"\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\n\r\nimport {StyledButton,stylesFunc} from \"./LoginStyle\"\r\n\r\nconst signInValidationSchema = Yup.object().shape({\r\n  email: Yup.string().email(\"Invalid Email\").required(\"Email is required!!\"),\r\n  password: Yup.string()\r\n    .required(\"No password provided.\")\r\n    .min(5, \"Password is too short - should be 8 chars minimum.\"),\r\n});\r\n\r\n\r\n\r\nconst initialValues = {\r\n  email: \"\",\r\n  password: \"\",\r\n};\r\n\r\nexport const Login=() =>{\r\n  const dispatch=useDispatch()\r\n  //const [loginError, setLoginError] = useState(null);\r\n  const history = useHistory();\r\n  const signinStyles = stylesFunc();\r\n\r\n  const handleGoogleButtonClick = () => {\r\n    API.get(\"/api/auth/profile\").then(console.log).catch(({response})=>console.log(response))\r\n  };\r\n\r\n  const handleFormSubmit = (values) => {\r\n    dispatch(login(values.email,values.password))\r\n\r\n    history.push(\"/\")\r\n\r\n  };\r\n\r\n  const {loginStatus}=useSelector(state=>state.authReducer)\r\n\r\n  useEffect(()=>{\r\n   \r\n    if (loginStatus){\r\n      history.push(\"/\")\r\n    }\r\n\r\n    \r\n\r\n  },[loginStatus])\r\n\r\n  return (\r\n    <Container className={signinStyles.wrapper} maxWidth=\"sm\">\r\n      <Avatar className={signinStyles.avatar}>\r\n        <LockOutlinedIcon />\r\n      </Avatar>\r\n      <Typography className={signinStyles.signIn} variant=\"h4\">\r\n       Login\r\n      </Typography>\r\n      <Formik\r\n        initialValues={initialValues}\r\n        validationSchema={signInValidationSchema}\r\n        onSubmit={handleFormSubmit}\r\n      >\r\n        {({ handleSubmit, handleChange, values, errors }) => (\r\n          <form onSubmit={handleSubmit}>\r\n            <Grid container spacing={3}>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  name=\"email\"\r\n                  label=\"Email\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  value={values.email}\r\n                  onChange={handleChange}\r\n                  error={errors.email}\r\n                  helperText={errors.email}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  name=\"password\"\r\n                  label=\"Password\"\r\n                  variant=\"outlined\"\r\n                  type=\"password\"\r\n                  fullWidth\r\n                  value={values.password}\r\n                  onChange={handleChange}\r\n                  error={errors.password}\r\n                  helperText={errors.password}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <StyledButton\r\n                  type=\"submit\"\r\n                  //variant=\"contained\"\r\n                 \r\n                  fullWidth\r\n                >\r\n                  Login\r\n                </StyledButton>\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <StyledButton\r\n                  variant=\"contained\"\r\n                 \r\n                  fullWidth\r\n                  onClick={handleGoogleButtonClick}\r\n                >\r\n                  Sign In with Google\r\n                </StyledButton>\r\n              </Grid>\r\n            </Grid>\r\n           {/*  <p style={{ textAlign: \"center\", color: \"red\" }}>\r\n            <small>{loginError}</small>\r\n            </p> */}\r\n           \r\n          </form>\r\n        )}\r\n      </Formik>\r\n      <p>\r\n        Don't have an account?      \r\n        <a className = {signinStyles.register} href=\"/register\">Register</a>\r\n      </p>\r\n            \r\n      <p>\r\n         <a className = {signinStyles.register} href=\"/forgot-password\">Forgot Password?</a>\r\n      </p>\r\n    </Container>\r\n  );\r\n}\r\n\r\n","C:\\Users\\ikanb\\Desktop\\IT\\NODEJS\\QUESTION-ANSWER-API-PROJECT-EXPRESS-JS-MONGO-DB\\client\\src\\pages\\SignUp.js",["163"],"import React, { useEffect } from \"react\";\r\nimport {\r\n \r\n  TextField,\r\n  Grid,\r\n  Container,\r\n  Avatar,\r\n\r\n  Typography,\r\n} from \"@material-ui/core\";\r\n\r\nimport { useFormik } from \"formik\";\r\n\r\nimport * as Yup from \"yup\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\n\r\nimport {useDispatch,useSelector} from \"react-redux\"\r\nimport {signUp} from \"../redux/actions/authActions\"\r\n\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nimport {StyledButton,stylesFunc} from \"./LoginStyle\"\r\n\r\n\r\n\r\n\r\nconst signUpValidationSchema = Yup.object().shape({\r\n  displayName: Yup.string().required(\"Display Name is required!!\"),\r\n  email: Yup.string().email(\"Invalid Email\").required(\"Email is required!!\"),\r\n  password: Yup.string()\r\n    .required(\"No password provided.\")\r\n    .min(8, \"Password is too short - should be 8 chars minimum.\"),\r\n});\r\n\r\n\r\n\r\n\r\nexport const  Signup=(props)=> {\r\n  const {loginStatus}=useSelector(state=>state.authReducer)\r\n  const history=useHistory()\r\n\r\n  const dispatch = useDispatch()\r\n\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      displayName: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n  \r\n    },\r\n    validationSchema: signUpValidationSchema,\r\n\r\n    onSubmit:  ({displayName,email,password}) => {\r\n      dispatch(signUp(displayName,email,password))\r\n\r\n      history.push(\"/\")\r\n\r\n\r\n    },\r\n  });\r\n  const signupStyles = stylesFunc();\r\n\r\n  const handleGoogleButtonClick = () => {\r\n  \r\n  };\r\n\r\n  useEffect(()=>{\r\n   \r\n    if (loginStatus){\r\n      history.push(\"/\")\r\n    }\r\n\r\n  },[loginStatus])\r\n \r\n\r\n\r\n\r\n  return (\r\n    <Container className={signupStyles.wrapper} maxWidth=\"sm\">\r\n      <Avatar className={signupStyles.avatar}>\r\n        <LockOutlinedIcon />\r\n      </Avatar>\r\n      <Typography className={signupStyles.signUp} variant=\"h4\">\r\n        Sign Up\r\n      </Typography>\r\n      <form onSubmit={formik.handleSubmit}>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              name=\"displayName\"\r\n              label=\"Display Name\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              {...formik.getFieldProps(\"displayName\")}\r\n              error={formik.touched.displayName && formik.errors.displayName}\r\n              helperText={\r\n                formik.touched.displayName && formik.errors.displayName\r\n              }\r\n            />\r\n          </Grid>\r\n\r\n\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              name=\"email\"\r\n              label=\"Email\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              {...formik.getFieldProps(\"email\")}\r\n              error={formik.touched.email && formik.errors.email}\r\n              helperText={formik.touched.email && formik.errors.email}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              name=\"password\"\r\n              label=\"Password\"\r\n              variant=\"outlined\"\r\n              type=\"password\"\r\n              fullWidth\r\n              {...formik.getFieldProps(\"password\")}\r\n              error={formik.touched.password && formik.errors.password}\r\n              helperText={formik.touched.password && formik.errors.password}\r\n            />\r\n          </Grid>\r\n          {/* <Grid item xs={12}>\r\n            <Input\r\n              name=\"title\"\r\n              label=\"Title\"\r\n              variant=\"outlined\"\r\n              type=\"file\"\r\n              fullWidth\r\n              onChange={(event)=>formik.setFieldValue(\"file\",event.target.files[0])}\r\n            />\r\n          </Grid> */}\r\n          <Grid item xs={12}>\r\n            <StyledButton type=\"submit\" fullWidth variant=\"contained\">\r\n              Register\r\n            </StyledButton>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <StyledButton\r\n              variant=\"contained\"\r\n              fullWidth\r\n              onClick={handleGoogleButtonClick}\r\n            >\r\n              SignUp with Google\r\n            </StyledButton>\r\n          </Grid>\r\n        </Grid>\r\n      </form>\r\n      <p>\r\n        Already have an account? <a className={signupStyles.login}  href=\"/login\"> Login.</a>\r\n      </p>\r\n    </Container>\r\n  );\r\n}\r\n\r\n","C:\\Users\\ikanb\\Desktop\\IT\\NODEJS\\QUESTION-ANSWER-API-PROJECT-EXPRESS-JS-MONGO-DB\\client\\src\\components\\Navbar\\Navbar.js",[],"C:\\Users\\ikanb\\Desktop\\IT\\NODEJS\\QUESTION-ANSWER-API-PROJECT-EXPRESS-JS-MONGO-DB\\client\\src\\components\\Footer\\Footer.js",[],"C:\\Users\\ikanb\\Desktop\\IT\\NODEJS\\QUESTION-ANSWER-API-PROJECT-EXPRESS-JS-MONGO-DB\\client\\src\\components\\Navbar\\NavbarStyles.js",[],"C:\\Users\\ikanb\\Desktop\\IT\\NODEJS\\QUESTION-ANSWER-API-PROJECT-EXPRESS-JS-MONGO-DB\\client\\src\\utils\\API.js",[],"C:\\Users\\ikanb\\Desktop\\IT\\NODEJS\\QUESTION-ANSWER-API-PROJECT-EXPRESS-JS-MONGO-DB\\client\\src\\redux\\actions\\actionTypes.js",[],"C:\\Users\\ikanb\\Desktop\\IT\\NODEJS\\QUESTION-ANSWER-API-PROJECT-EXPRESS-JS-MONGO-DB\\client\\src\\redux\\actions\\authActions.js",[],"C:\\Users\\ikanb\\Desktop\\IT\\NODEJS\\QUESTION-ANSWER-API-PROJECT-EXPRESS-JS-MONGO-DB\\client\\src\\redux\\store\\store.js",[],"C:\\Users\\ikanb\\Desktop\\IT\\NODEJS\\QUESTION-ANSWER-API-PROJECT-EXPRESS-JS-MONGO-DB\\client\\src\\redux\\reducers\\authReducer.js",[],"C:\\Users\\ikanb\\Desktop\\IT\\NODEJS\\QUESTION-ANSWER-API-PROJECT-EXPRESS-JS-MONGO-DB\\client\\src\\pages\\LoginStyle.js",[],"C:\\Users\\ikanb\\Desktop\\IT\\NODEJS\\QUESTION-ANSWER-API-PROJECT-EXPRESS-JS-MONGO-DB\\client\\src\\pages\\index.js",[],"C:\\Users\\ikanb\\Desktop\\IT\\NODEJS\\QUESTION-ANSWER-API-PROJECT-EXPRESS-JS-MONGO-DB\\client\\src\\pages\\CreateQuestion.js",[],"C:\\Users\\ikanb\\Desktop\\IT\\NODEJS\\QUESTION-ANSWER-API-PROJECT-EXPRESS-JS-MONGO-DB\\client\\src\\redux\\reducers\\questionReducer.js",[],"C:\\Users\\ikanb\\Desktop\\IT\\NODEJS\\QUESTION-ANSWER-API-PROJECT-EXPRESS-JS-MONGO-DB\\client\\src\\redux\\actions\\questionActions.js",[],"C:\\Users\\ikanb\\Desktop\\IT\\NODEJS\\QUESTION-ANSWER-API-PROJECT-EXPRESS-JS-MONGO-DB\\client\\src\\pages\\Questions.js",["164","165","166"],"import React, { useEffect, useState } from 'react'\r\nimport { getAllQuestions } from \"../redux/actions/questionActions\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { useHistory } from \"react-router-dom\"\r\nimport { QuestionItem } from '../components/QuestionItem/QuestionItem'\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Container,\r\n  Grid,\r\n\r\n} from \"@material-ui/core\";\r\nimport { BreadcrumQuestions } from '../components/Breadcrum/BreadcrumQuestions'\r\n\r\n\r\nconst stylesFunc = makeStyles((theme) => ({\r\n  wrapper: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    minHeight: \"100vh\",\r\n    maxWidth: \"85%\",\r\n    marginTop: \"5rem\",\r\n    marginBottom: \"2rem\",\r\n    textAlign: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: \"1rem auto\",\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  circular: {\r\n    margin: 'auto',\r\n  },\r\n  wrapperbreadcrum: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    paddingTop: 5,\r\n\r\n  }\r\n}));\r\n\r\n\r\nexport const Questions = () => {\r\n  const dispatch = useDispatch()\r\n\r\n  const mainStyles = stylesFunc();\r\n  const { data } = useSelector(state => state.questionReducer.allQuestions)\r\n  const userData = useSelector(state => state.authReducer.userData)\r\n  //const refresh = useSelector(state => state.questionReducer.isQuestionCreated)\r\n\r\n  const [render, setRender] = useState(true)\r\n  //console.log(data?.length)\r\n\r\n\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    \r\n    \r\n    dispatch(getAllQuestions())\r\n    //setlist(data)\r\n  }, [render])\r\n\r\n  console.log(data)\r\n\r\n  return (\r\n    <>\r\n      <Container className={mainStyles.wrapperbreadcrum}>\r\n        <BreadcrumQuestions />\r\n      </Container>\r\n\r\n\r\n\r\n      <Container className={mainStyles.wrapper}>\r\n        <Grid container spacing={2}>\r\n\r\n          {\r\n\r\n            data?.map((item, index) => {\r\n\r\n\r\n              return (\r\n                \r\n                  <Grid item xs={12} md={6} lg={6} key={index} >\r\n                    \r\n                    <QuestionItem item={item} userData={userData}  />\r\n                  </Grid>\r\n                \r\n              )\r\n            }\r\n\r\n\r\n            )\r\n\r\n          }\r\n\r\n        </Grid>\r\n      </Container>\r\n    </>\r\n  )\r\n}\r\n","C:\\Users\\ikanb\\Desktop\\IT\\NODEJS\\QUESTION-ANSWER-API-PROJECT-EXPRESS-JS-MONGO-DB\\client\\src\\pages\\MyStack.js",[],"C:\\Users\\ikanb\\Desktop\\IT\\NODEJS\\QUESTION-ANSWER-API-PROJECT-EXPRESS-JS-MONGO-DB\\client\\src\\components\\QuestionItem\\QuestionItem.js",["167","168","169"],"import React, {useState,useEffect} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\n\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\n\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { red } from '@material-ui/core/colors';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport ShareIcon from '@material-ui/icons/Share';\r\n\r\nimport { useHistory } from \"react-router-dom\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { getAnswersByQuestionId } from \"../../redux/actions/answerActions\"\r\n\r\nimport { questionLike, undoLike } from '../../utils/questionlike';\r\n\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { deleteQuestion } from '../../utils/deleteQuestion';\r\nimport { getAllQuestions } from '../../redux/actions/questionActions';\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n\r\n    backgroundColor: \"rgba(254,200,208,0.5)\"\r\n\r\n\r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: '56.25%', // 16:9\r\n  },\r\n  expand: {\r\n    transform: 'rotate(0deg)',\r\n    marginLeft: 'auto',\r\n    transition: theme.transitions.create('transform', {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  expandOpen: {\r\n    transform: 'rotate(180deg)',\r\n  },\r\n  avatar: {\r\n    backgroundColor: red[500],\r\n  },\r\n  hover: {\r\n    '&:hover': {\r\n      cursor: \"pointer\"\r\n    },\r\n\r\n\r\n  },\r\n  hoverContent: {\r\n    //backgroundColor:\"#fedbd0\",\r\n    height: 65,\r\n    '&:hover': {\r\n      cursor: \"pointer\"\r\n    },\r\n    [theme.breakpoints.down('lg')]: {\r\n      height: 90,\r\n    },\r\n    [theme.breakpoints.down('md')]: {\r\n      height: 140,\r\n\r\n    },\r\n\r\n  },\r\n  text: {\r\n    fontWeight: \"600\",\r\n    fontSize: 16\r\n\r\n  }\r\n\r\n\r\n\r\n}));\r\n\r\n\r\n\r\n\r\nexport function QuestionItem({ item,userData }) {\r\n  //console.log(item.user._id)\r\n  //console.log(item)\r\n  let includeStatus = item.likes.includes(userData?.id)\r\n\r\n  const history = useHistory()\r\n  const dispatch = useDispatch()\r\n\r\n  //console.log(userData)\r\n\r\n \r\n  \r\n  const classes = useStyles();\r\n\r\n\r\n\r\n\r\n  const handleQuestiondetail = (val) => {\r\n    history.push({ pathname: `/questions/${item.slug}`, state: { item} })\r\n    dispatch(getAnswersByQuestionId(item._id))\r\n\r\n  }\r\n\r\n\r\n\r\n  \r\n  const handleFav = () => {\r\n\r\n\r\n    if (includeStatus) {\r\n\r\n        undoLike(item._id).then(({success,data}) => {\r\n        dispatch(getAllQuestions()) \r\n      })\r\n\r\n    } else {\r\n        questionLike(item._id).then(({success,data}) => {\r\n        dispatch(getAllQuestions())\r\n      })\r\n\r\n\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n  const handleDelete=()=>{\r\n\r\n    deleteQuestion(item._id).then(()=> {\r\n      dispatch(getAllQuestions())\r\n    \r\n    })\r\n\r\n\r\n  }\r\n\r\n  \r\n\r\n\r\n  return (\r\n    <Card className={classes.root}  >\r\n      <CardHeader\r\n        avatar={\r\n          <Avatar aria-label=\"recipe\" className={classes.avatar}>\r\n            {item.user.name[0].toUpperCase()}\r\n          </Avatar>\r\n        }\r\n\r\n\r\n        subheader={<p style={{ fontSize: 18, fontWeight: \"600\", textAlign: \"right\", paddingRight: 15 }}>\r\n          {new Intl.DateTimeFormat(\"en-US\", { year: \"numeric\", month: \"short\", day: \"2-digit\" }).format(new Date(Date.parse(item.createdAt)))}</p>}\r\n      />\r\n\r\n\r\n      <CardContent onClick={handleQuestiondetail}\r\n        className={classes.hover}>\r\n        <Typography\r\n          variant=\"h5\"\r\n          color=\"textSecondary\"\r\n          component=\"p\"\r\n          style={{ textAlign: \"left\", fontWeight: \"bold\", fontFamily: \"Roboto\", fontSize: 24, color: \"#3caea3\" }}\r\n\r\n        >\r\n          {item.title}\r\n\r\n        </Typography>\r\n      </CardContent>\r\n      <CardContent onClick={handleQuestiondetail}\r\n        className={classes.hoverContent}>\r\n\r\n        {item.content.length > 180 ?\r\n          <Typography\r\n            variant=\"body1\"\r\n            color=\"textSecondary\"\r\n            component=\"p\"\r\n            style={{ textAlign: \"left\", fontFamily: \"'Roboto', sans-serif\", fontSize: 20, fontWeight: \"700\" }}\r\n\r\n\r\n          > {item.content.slice(0, 180)}... </Typography>\r\n          :\r\n          <Typography\r\n            variant=\"body1\"\r\n            color=\"textSecondary\"\r\n            component=\"p\"\r\n            style={{ textAlign: \"left\", fontFamily: \"'Roboto', sans-serif\", fontSize: 20, fontWeight: \"700\" }}>{item.content}  </Typography>\r\n\r\n\r\n        }\r\n      </CardContent>\r\n      <CardActions disableSpacing>\r\n        <IconButton aria-label=\"add to favorites\" onClick={handleFav}>\r\n          <FavoriteIcon style={{ color: includeStatus ? \"red\" : \"gray\" }} />\r\n        </IconButton>\r\n\r\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\" className={classes.text}>\r\n          {item.likeCount}\r\n        </Typography>\r\n\r\n        <IconButton aria-label=\"share\">\r\n          <ShareIcon />\r\n        </IconButton>\r\n\r\n\r\n        {\r\n          item.user?._id === userData?.id ?\r\n            <IconButton aria-label=\"delete\" onClick={handleDelete}>\r\n              <DeleteIcon />\r\n            </IconButton>\r\n            :\r\n            null\r\n        }\r\n        {\r\n          item.user?._id === userData?.id ?\r\n            <IconButton >\r\n              <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\" className={classes.text}>\r\n                Edit\r\n              </Typography>\r\n            </IconButton>\r\n            :\r\n            null\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n      </CardActions>\r\n\r\n    </Card>\r\n  );\r\n}\r\n\r\n\r\n","C:\\Users\\ikanb\\Desktop\\IT\\NODEJS\\QUESTION-ANSWER-API-PROJECT-EXPRESS-JS-MONGO-DB\\client\\src\\pages\\QuestionDetail.js",["170","171","172","173","174","175","176","177"],"import { CardContent, Container, Grid, Typography, Card, CardHeader, CardMedia, TextField } from '@material-ui/core'\r\nimport React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { useLocation } from \"react-router-dom\"\r\nimport { BreadcrumQuestionDetail } from '../components/Breadcrum/BreadcrumQuestionDetail'\r\nimport {\r\n    fade,\r\n    ThemeProvider,\r\n    withStyles,\r\n    makeStyles,\r\n    createMuiTheme,\r\n} from \"@material-ui/core/styles\";\r\nimport { QuestionDetailItem } from '../components/QuestionDetailItem/QuestionDetailItem'\r\nimport { AnswerItem } from '../components/AnswerItem/AnswerItem'\r\nimport { getAnswersByQuestionId } from '../redux/actions/answerActions'\r\nimport ShareIcon from '@material-ui/icons/Share';\r\nimport ImageIcon from '@material-ui/icons/Image';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Button from '@material-ui/core/Button';\r\nimport InputBase from '@material-ui/core/InputBase';\r\n\r\nconst stylesFunc = makeStyles((theme) => ({\r\n    wrapper: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        minHeight: \"100vh\",\r\n        maxWidth: \"85%\",\r\n        marginTop: \"5rem\",\r\n        marginBottom: \"2rem\",\r\n        textAlign: \"center\",\r\n        backgroundColor: \"#fedbd0\",\r\n        paddingTop: 25,\r\n        borderRadius: 10,\r\n\r\n    },\r\n    avatar: {\r\n        margin: \"1rem auto\",\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    circular: {\r\n        margin: 'auto',\r\n    },\r\n    wrapperbreadcrum: {\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        paddingTop: 5\r\n    },\r\n    media: {\r\n        height: 140,\r\n    },\r\n    margin: {\r\n        margin: theme.spacing(1)\r\n      }\r\n}));\r\n\r\nconst CssTextField = withStyles({\r\n    root: {\r\n        \"& label.Mui-focused\": {\r\n            color: \"#3caea3\"\r\n        },\r\n        \"& .MuiInput-underline:after\": {\r\n            borderBottomColor: \"green\"\r\n        },\r\n        \"& .MuiOutlinedInput-root\": {\r\n            \"& fieldset\": {\r\n                borderColor: \"gray\"\r\n            },\r\n            \"&:hover fieldset\": {\r\n                borderColor: \"#3caea3\"\r\n            },\r\n            \"&.Mui-focused fieldset\": {\r\n                borderColor: \"#3caea3\"\r\n            }\r\n        }\r\n    }\r\n})(TextField);\r\n\r\nexport const QuestionDetail = (props) => {\r\n\r\n\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const location = useLocation()\r\n\r\n    const mainStyles = stylesFunc();\r\n\r\n    const state = useSelector(state => state.answerReducer.allAnswers.data)\r\n    const userData = useSelector(state => state.authReducer.userData)\r\n\r\n\r\n    const item = location.state.item\r\n\r\n\r\n    //console.log(item._id)\r\n\r\n    useEffect(() => {\r\n\r\n        dispatch(getAnswersByQuestionId(item._id))\r\n\r\n\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <>\r\n            <Container className={mainStyles.wrapperbreadcrum}>\r\n                <BreadcrumQuestionDetail />\r\n            </Container>\r\n\r\n\r\n            <Container className={mainStyles.wrapper}>\r\n                <Grid container spacing={2}>\r\n                    <Grid item lg={12} md={12} sm={12} xs={12}>\r\n                        <QuestionDetailItem item={item} userData={userData} />\r\n\r\n                    </Grid>\r\n                    <Grid item lg={12} md={12} sm={12} xs={12}>\r\n                        <Card style={{ backgroundColor: \"white\" }}>\r\n                            <CardContent>\r\n\r\n                                <Typography variant=\"h5\" component=\"p\" style={{ color: \"#3caea3\", fontWeight: \"600\" }}>\r\n                                    ANSWERS\r\n                                        </Typography>\r\n                            </CardContent>\r\n                        </Card>\r\n                    </Grid>\r\n                    {\r\n\r\n                        state?.map((item, index) => (\r\n                            <Grid item lg={12} md={12} sm={12} xs={12} key={index}>\r\n                                <AnswerItem item={item} />\r\n                            </Grid>\r\n\r\n                        ))\r\n\r\n                    }\r\n\r\n                    <Grid item lg={12} md={12} sm={12} xs={12} >\r\n                        <Card style={{ textAlign: \"left\" }}>\r\n\r\n                            <Card>\r\n                                <CardHeader\r\n                                    subheader={<p style={{ fontWeight: \"bold\", padding: 0, marginBlock: 0, color: \"#3caea3\",paddingLeft:3 }}>Your Answer</p>}\r\n                                    style={{ textAlign: \"left\", marginLeft: 10, color: \"black\" }}\r\n\r\n\r\n                                />\r\n                            </Card>\r\n                            <CardHeader\r\n                                subheader={\r\n                                    <IconButton aria-label=\"share\" style={{ margin: 0, fontSize: 5 }}>\r\n                                        <ImageIcon style={{ fontSize: 15 }} />\r\n                                        <Typography style={{ marginLeft: 5 }}>Add Picture</Typography>\r\n                                    </IconButton>}\r\n                                style={{ textAlign: \"left\", paddingBottom: 0, paddingTop: 3 }}\r\n\r\n\r\n\r\n                            />\r\n\r\n                            <CardContent style={{ paddingTop: 0 }}>\r\n\r\n                                <CssTextField\r\n                                    className={mainStyles.margin}\r\n                                    //label=\"Custom CSS\"\r\n                                    variant=\"outlined\"\r\n                                    id=\"custom-css-outlined-input\"\r\n                                    multiline\r\n                                    rows={8}\r\n                                    fullWidth\r\n                                />\r\n\r\n                            </CardContent>\r\n\r\n                            <Button variant=\"contained\" style={{ marginLeft: 25, color: \"white\", backgroundColor: \"#3caea3\", marginBottom: 20 }} >\r\n                                Send Your Post\r\n                            </Button>\r\n                        </Card>\r\n\r\n                    </Grid>\r\n\r\n\r\n                </Grid>\r\n            </Container>\r\n        </>\r\n    )\r\n}\r\n\r\n","C:\\Users\\ikanb\\Desktop\\IT\\NODEJS\\QUESTION-ANSWER-API-PROJECT-EXPRESS-JS-MONGO-DB\\client\\src\\redux\\actions\\answerActions.js",[],"C:\\Users\\ikanb\\Desktop\\IT\\NODEJS\\QUESTION-ANSWER-API-PROJECT-EXPRESS-JS-MONGO-DB\\client\\src\\redux\\reducers\\answerReducer.js",[],"C:\\Users\\ikanb\\Desktop\\IT\\NODEJS\\QUESTION-ANSWER-API-PROJECT-EXPRESS-JS-MONGO-DB\\client\\src\\components\\Breadcrum\\Breadcrum.js",[],"C:\\Users\\ikanb\\Desktop\\IT\\NODEJS\\QUESTION-ANSWER-API-PROJECT-EXPRESS-JS-MONGO-DB\\client\\src\\components\\Breadcrum\\BreadcrumQuestions.js",[],"C:\\Users\\ikanb\\Desktop\\IT\\NODEJS\\QUESTION-ANSWER-API-PROJECT-EXPRESS-JS-MONGO-DB\\client\\src\\components\\Breadcrum\\BreadcrumQuestionDetail.js",[],"C:\\Users\\ikanb\\Desktop\\IT\\NODEJS\\QUESTION-ANSWER-API-PROJECT-EXPRESS-JS-MONGO-DB\\client\\src\\components\\Breadcrum\\BreadcrumAsk.js",[],"C:\\Users\\ikanb\\Desktop\\IT\\NODEJS\\QUESTION-ANSWER-API-PROJECT-EXPRESS-JS-MONGO-DB\\client\\src\\components\\QuestionDetailItem\\QuestionDetailItem.js",[],"C:\\Users\\ikanb\\Desktop\\IT\\NODEJS\\QUESTION-ANSWER-API-PROJECT-EXPRESS-JS-MONGO-DB\\client\\src\\components\\AnswerItem\\AnswerItem.js",[],"C:\\Users\\ikanb\\Desktop\\IT\\NODEJS\\QUESTION-ANSWER-API-PROJECT-EXPRESS-JS-MONGO-DB\\client\\src\\utils\\questionlike.js",[],"C:\\Users\\ikanb\\Desktop\\IT\\NODEJS\\QUESTION-ANSWER-API-PROJECT-EXPRESS-JS-MONGO-DB\\client\\src\\utils\\getSingleQuestion.js",[],"C:\\Users\\ikanb\\Desktop\\IT\\NODEJS\\QUESTION-ANSWER-API-PROJECT-EXPRESS-JS-MONGO-DB\\client\\src\\utils\\answerLike.js",[],"C:\\Users\\ikanb\\Desktop\\IT\\NODEJS\\QUESTION-ANSWER-API-PROJECT-EXPRESS-JS-MONGO-DB\\client\\src\\utils\\getSingleAnswer.js",[],["178","179"],"C:\\Users\\ikanb\\Desktop\\IT\\NODEJS\\QUESTION-ANSWER-API-PROJECT-EXPRESS-JS-MONGO-DB\\client\\src\\utils\\deleteQuestion.js",[],["180","181"],{"ruleId":"182","replacedBy":"183"},{"ruleId":"184","replacedBy":"185"},{"ruleId":"186","severity":1,"message":"187","line":22,"column":7,"nodeType":"188","endLine":22,"endColumn":9,"suggestions":"189"},{"ruleId":"186","severity":1,"message":"190","line":63,"column":5,"nodeType":"188","endLine":63,"endColumn":18,"suggestions":"191"},{"ruleId":"186","severity":1,"message":"190","line":74,"column":5,"nodeType":"188","endLine":74,"endColumn":18,"suggestions":"192"},{"ruleId":"193","severity":1,"message":"194","line":4,"column":10,"nodeType":"195","messageId":"196","endLine":4,"endColumn":20},{"ruleId":"193","severity":1,"message":"197","line":49,"column":18,"nodeType":"195","messageId":"196","endLine":49,"endColumn":27},{"ruleId":"186","severity":1,"message":"187","line":61,"column":6,"nodeType":"188","endLine":61,"endColumn":14,"suggestions":"198"},{"ruleId":"193","severity":1,"message":"199","line":1,"column":16,"nodeType":"195","messageId":"196","endLine":1,"endColumn":24},{"ruleId":"193","severity":1,"message":"200","line":1,"column":25,"nodeType":"195","messageId":"196","endLine":1,"endColumn":34},{"ruleId":"193","severity":1,"message":"201","line":18,"column":23,"nodeType":"195","messageId":"196","endLine":18,"endColumn":34},{"ruleId":"193","severity":1,"message":"202","line":1,"column":70,"nodeType":"195","messageId":"196","endLine":1,"endColumn":79},{"ruleId":"193","severity":1,"message":"203","line":7,"column":5,"nodeType":"195","messageId":"196","endLine":7,"endColumn":9},{"ruleId":"193","severity":1,"message":"204","line":8,"column":5,"nodeType":"195","messageId":"196","endLine":8,"endColumn":18},{"ruleId":"193","severity":1,"message":"205","line":11,"column":5,"nodeType":"195","messageId":"196","endLine":11,"endColumn":19},{"ruleId":"193","severity":1,"message":"206","line":16,"column":8,"nodeType":"195","messageId":"196","endLine":16,"endColumn":17},{"ruleId":"193","severity":1,"message":"207","line":19,"column":8,"nodeType":"195","messageId":"196","endLine":19,"endColumn":15},{"ruleId":"193","severity":1,"message":"208","line":21,"column":8,"nodeType":"195","messageId":"196","endLine":21,"endColumn":17},{"ruleId":"186","severity":1,"message":"209","line":103,"column":8,"nodeType":"188","endLine":103,"endColumn":10,"suggestions":"210"},{"ruleId":"182","replacedBy":"211"},{"ruleId":"184","replacedBy":"212"},{"ruleId":"182","replacedBy":"213"},{"ruleId":"184","replacedBy":"214"},"no-native-reassign",["215"],"no-negated-in-lhs",["216"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["217"],"React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["218"],["219"],"no-unused-vars","'useHistory' is defined but never used.","Identifier","unusedVar","'setRender' is assigned a value but never used.",["220"],"'useState' is defined but never used.","'useEffect' is defined but never used.","'useSelector' is defined but never used.","'CardMedia' is defined but never used.","'fade' is defined but never used.","'ThemeProvider' is defined but never used.","'createMuiTheme' is defined but never used.","'ShareIcon' is defined but never used.","'Divider' is defined but never used.","'InputBase' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'item._id'. Either include them or remove the dependency array.",["221"],["215"],["216"],["215"],["216"],"no-global-assign","no-unsafe-negation",{"desc":"222","fix":"223"},{"desc":"224","fix":"225"},{"desc":"224","fix":"226"},{"desc":"227","fix":"228"},{"desc":"229","fix":"230"},"Update the dependencies array to be: [dispatch]",{"range":"231","text":"232"},"Update the dependencies array to be: [history, loginStatus]",{"range":"233","text":"234"},{"range":"235","text":"234"},"Update the dependencies array to be: [dispatch, render]",{"range":"236","text":"237"},"Update the dependencies array to be: [dispatch, item._id]",{"range":"238","text":"239"},[610,612],"[dispatch]",[1481,1494],"[history, loginStatus]",[1524,1537],[1509,1517],"[dispatch, render]",[2819,2821],"[dispatch, item._id]"]